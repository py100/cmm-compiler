[production]
	program' => 
		program ;
	program => 
		main_declaration ;

	main_declaration => 
		type_specifier declarator compound_statement ;

	type_specifier => 
		VOID 
		| CHAR 
		| INT 
		| FLOAT ;


	declarator => 
		direct_declarator ;


	direct_declarator => 
		IDENTIFIER | IDENTIFIER '(' parameter_list ')' | IDENTIFIER '(' ')' ;


	parameter_list => 
		parameter_declaration 
		| parameter_list ',' parameter_declaration ;


	parameter_declaration =>
		declaration_specifiers IDENTIFIER ;



	compound_statement =>
		'{' '}'
		| '{' statement_list '}'
		| '{' declaration_list statement_list '}' ;

	declaration_list =>
		declaration
		| declaration_list declaration ;

	declaration =>
		init_declarator
		| init_declarator_list ',' init_declarator;

	init_declarator
		declarator
		| declarator '=' initializer ;


	statement_list =>
		statement
		| statement_list statement ;

	statement =>
		compound_statement
		| expression_statement
		| selection_statement
		| iteration_statement
		| jump_statement ;


	expression_statement =>
		';'
		| expression ';' ;

	selection_statement =>
		IF '(' expression ')' statement
		| IF '(' expression ')' statement ELSE statement ;

	iteration_statement =>
		WHILE '(' expression ')' statement
		| FOR '(' expression_statement expression_statement ')' statement
		| FOR '(' expression_statement expression_statement expression ')' statement ;

	jump_statement =>
		CONTINUE ';'
		| BREAK ';'
		| RETURN ';'
		| RETURN expression ';' ;

	expression =>
		assignment_expression
		| expression ',' assignment_expression ;

	assignment_expression =>
		conditional_expression
		| unary_expression assignment_operator assignment_expression ;

	condition_expression =>
		logical_or_expression
		| logical_or_expression '?' expression ':' conditional_expression ;

	logical_or_expression =>
    	logical_and_expression
		| logical_or_expression OR_OP logical_and_expression ;

	logical_and_expression =>
    	inclusive_or_expression
    	| logical_and_expression AND_OP inclusive_or_expression ;

    inclusive_or_expression
     	exclusive_or_expression
    	| inclusive_or_expression '|' exclusive_or_expression ;


 	exclusive_or_expression =>
     	and_expression
     	| exclusive_or_expression '^' and_expression ;


    and_expression =>
    	equality_expression
    	| and_expression '&' equality_expression ;
 
	equality_expression =>
    	relational_expression
    	| equality_expression EQ_OP relational_expression
    	| equality_expression NE_OP relational_expression ;
 
	relational_expression =>
     	additive_expression
     	| relational_expression '<' additive_expression
     	| relational_expression '>' additive_expression
     	| relational_expression LE_OP additive_expression
     	| relational_expression GE_OP additive_expression ;


    additive_expression =>
    	multiplicative_expression
    	| additive_expression '+' multiplicative_expression
    	| additive_expression '-' multiplicative_expression ;
 
	multiplicative_expression =>
     	cast_expression
     	| multiplicative_expression '*' cast_expression
     	| multiplicative_expression '/' cast_expression
     	| multiplicative_expression '%' cast_expression ;


    cast_expression =>
    	unary_expression
     	| '(' type_name ')' cast_expression ;
 
	unary_expression =>
    	postfix_expression
     	| INC_OP unary_expression
     	| DEC_OP unary_expression
     	| unary_operator cast_expression
     	| SIZEOF unary_expression
     	| SIZEOF '(' type_name ')' ;
 
	postfix_expression =>
    	primary_expression
     	| postfix_expression '[' expression ']'
     	| postfix_expression '(' ')'
     	| postfix_expression '(' argument_expression_list ')'
     	| postfix_expression '.' IDENTIFIER
     	| postfix_expression PTR_OP IDENTIFIER
     	| postfix_expression INC_OP
     	| postfix_expression DEC_OP ;
 
	primary_expression =>
    	IDENTIFIER
     	| CONSTANT
     	| STRING_LITERAL
     	| '(' expression ')' ;
 	
 	unary_operator =>
    	'&'
     	| '*'
     	| '+'
     	| '-'
     	| '~'
     	| '!' ;


    assignment_operator =>
    	'='
     	| MUL_ASSIGN
     	| DIV_ASSIGN
     	| MOD_ASSIGN
     	| ADD_ASSIGN
     	| SUB_ASSIGN
     	| LEFT_ASSIGN
     	| RIGHT_ASSIGN
     	| AND_ASSIGN
     	| XOR_ASSIGN
     	| OR_ASSIGN ;

     